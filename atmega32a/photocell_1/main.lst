   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/peter/projects/avr/atmega32a/photocell_1/",100,0,2,.Ltext0
   8               		.stabs	"main.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  60               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  62               		.stabs	"/usr/lib/gcc/avr/4.8.1/include/stdint.h",130,0,0,0
  63               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  64               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  65               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  66               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  67               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  68               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  69               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  70               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  71               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  72               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  73               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  74               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  75               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  76               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  77               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  78               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  79               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  80               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  81               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  82               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  83               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  84               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  85               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  86               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  87               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  88               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
  89               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  90               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  91               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  92               		.stabn	162,0,0,0
  93               		.stabn	162,0,0,0
  94               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  95               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  96               		.stabn	162,0,0,0
  97               		.stabn	162,0,0,0
  98               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
  99               		.stabs	"__fuse_t:t(6,1)=(6,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
 100               		.stabn	162,0,0,0
 101               		.stabn	162,0,0,0
 102               		.stabs	"adc_init:F(0,47)",36,0,35,adc_init
 103               	.global	adc_init
 104               		.type	adc_init, @function
 105               	adc_init:
 106               		.stabd	46,0,0
   1:main.c        **** /*
   2:main.c        ****  * @file    main.c
   3:main.c        ****  * @brief   Photocell 1. Read the light sensor signal through ADC,
   4:main.c        ****  *          flash LEDs accordingly to digitized analog input signal.
   5:main.c        ****  * @date    27 Aug 2016 05:50 PM
   6:main.c        ****  */
   7:main.c        **** 
   8:main.c        **** 
   9:main.c        **** #define __DELAY_BACKWARD_COMPATIBLE__
  10:main.c        **** 
  11:main.c        **** #ifndef F_CPU
  12:main.c        **** #define F_CPU 1000000UL    /* 1 MHz clock speed */
  13:main.c        **** #endif
  14:main.c        **** 
  15:main.c        **** #include <avr/io.h>
  16:main.c        **** #include <util/delay.h>
  17:main.c        **** 
  18:main.c        **** /* Voltage divider:
  19:main.c        ****  *
  20:main.c        ****  ********************************
  21:main.c        ****  * Vin --
  22:main.c        ****  *     R1
  23:main.c        ****  *     -----Vout
  24:main.c        ****  *     R2
  25:main.c        ****  *     gnd
  26:main.c        ****  *******************************
  27:main.c        ****  *
  28:main.c        ****  * Vout = Vin * R2 / (R1 + R2)
  29:main.c        ****  */
  30:main.c        **** 
  31:main.c        **** 
  32:main.c        **** uint8_t V_REF = 5;  /* 5V reference */
  33:main.c        **** 
  34:main.c        **** /* Initialize ADC */
  35:main.c        **** void adc_init(void) {
 107               		.stabn	68,0,35,.LM0-.LFBB1
 108               	.LM0:
 109               	.LFBB1:
 110               	/* prologue: function */
 111               	/* frame size = 0 */
 112               	/* stack size = 0 */
 113               	.L__stack_usage = 0
  36:main.c        ****     ADMUX = 1 << REFS0; /* set up voltage reference to AVCC */
 114               		.stabn	68,0,36,.LM1-.LFBB1
 115               	.LM1:
 116 0000 80E4      		ldi r24,lo8(64)
 117 0002 87B9      		out 0x7,r24
  37:main.c        ****     ADCSRA = (1 << ADEN); /* enable ADC */
 118               		.stabn	68,0,37,.LM2-.LFBB1
 119               	.LM2:
 120 0004 80E8      		ldi r24,lo8(-128)
 121 0006 86B9      		out 0x6,r24
  38:main.c        ****     ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);   /* set prescaler mode to 128 (min resol
 122               		.stabn	68,0,38,.LM3-.LFBB1
 123               	.LM3:
 124 0008 86B1      		in r24,0x6
 125 000a 8760      		ori r24,lo8(7)
 126 000c 86B9      		out 0x6,r24
 127 000e 0895      		ret
 128               		.size	adc_init, .-adc_init
 129               	.Lscope1:
 130               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 131               		.stabd	78,0,0
 132               		.stabs	"adc_read:F(5,4)",36,0,42,adc_read
 133               		.stabs	"channel:P(5,2)",64,0,42,24
 134               	.global	adc_read
 135               		.type	adc_read, @function
 136               	adc_read:
 137               		.stabd	46,0,0
  39:main.c        **** }
  40:main.c        **** 
  41:main.c        **** /* @brief   Return ADC sample. */
  42:main.c        **** uint16_t adc_read(uint8_t channel) {
 138               		.stabn	68,0,42,.LM4-.LFBB2
 139               	.LM4:
 140               	.LFBB2:
 141               	/* prologue: function */
 142               	/* frame size = 0 */
 143               	/* stack size = 0 */
 144               	.L__stack_usage = 0
  43:main.c        ****     channel &= 0x07;    /* assert channel is between 0-7 inclusive */
  44:main.c        ****     ADMUX |= channel;   /* set multiplexer */
 145               		.stabn	68,0,44,.LM5-.LFBB2
 146               	.LM5:
 147 0010 97B1      		in r25,0x7
  43:main.c        ****     channel &= 0x07;    /* assert channel is between 0-7 inclusive */
 148               		.stabn	68,0,43,.LM6-.LFBB2
 149               	.LM6:
 150 0012 8770      		andi r24,lo8(7)
 151               		.stabn	68,0,44,.LM7-.LFBB2
 152               	.LM7:
 153 0014 892B      		or r24,r25
 154 0016 87B9      		out 0x7,r24
  45:main.c        ****     ADCSRA |= (1 << ADSC);  /* start single conversion */
 155               		.stabn	68,0,45,.LM8-.LFBB2
 156               	.LM8:
 157 0018 369A      		sbi 0x6,6
 158               	.L4:
  46:main.c        ****     while (!(ADCSRA & (1 << ADIF)));    /* allow conversion to complete, wait for ADIF flag set */
 159               		.stabn	68,0,46,.LM9-.LFBB2
 160               	.LM9:
 161 001a 349B      		sbis 0x6,4
 162 001c 00C0      		rjmp .L4
  47:main.c        ****     ADCSRA |= (1 << ADIF);  /* clear bit, by writing 1 to it */
 163               		.stabn	68,0,47,.LM10-.LFBB2
 164               	.LM10:
 165 001e 349A      		sbi 0x6,4
  48:main.c        ****     return ADC;
 166               		.stabn	68,0,48,.LM11-.LFBB2
 167               	.LM11:
 168 0020 84B1      		in r24,0x4
 169 0022 95B1      		in r25,0x4+1
  49:main.c        **** }
 170               		.stabn	68,0,49,.LM12-.LFBB2
 171               	.LM12:
 172 0024 0895      		ret
 173               		.size	adc_read, .-adc_read
 174               	.Lscope2:
 175               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 176               		.stabd	78,0,0
 177               		.stabs	"ports_init:F(0,47)",36,0,52,ports_init
 178               	.global	ports_init
 179               		.type	ports_init, @function
 180               	ports_init:
 181               		.stabd	46,0,0
  50:main.c        **** 
  51:main.c        **** /* @brief   Initialize port pins to be output direction. */
  52:main.c        **** void ports_init(void) {
 182               		.stabn	68,0,52,.LM13-.LFBB3
 183               	.LM13:
 184               	.LFBB3:
 185               	/* prologue: function */
 186               	/* frame size = 0 */
 187               	/* stack size = 0 */
 188               	.L__stack_usage = 0
  53:main.c        ****     DDRC = 0xFF;    /* set all PORTC to OUTPUT */
 189               		.stabn	68,0,53,.LM14-.LFBB3
 190               	.LM14:
 191 0026 8FEF      		ldi r24,lo8(-1)
 192 0028 84BB      		out 0x14,r24
  54:main.c        ****     PORTC = 0x00;   /* set LOW all output port pins */
 193               		.stabn	68,0,54,.LM15-.LFBB3
 194               	.LM15:
 195 002a 15BA      		out 0x15,__zero_reg__
 196 002c 0895      		ret
 197               		.size	ports_init, .-ports_init
 198               	.Lscope3:
 199               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 200               		.stabd	78,0,0
 201               		.stabs	"adc_from_v:F(5,4)",36,0,59,adc_from_v
 202               	.global	adc_from_v
 203               		.type	adc_from_v, @function
 204               	adc_from_v:
 205               		.stabd	46,0,0
  55:main.c        **** }
  56:main.c        **** 
  57:main.c        **** /* @brief   ADC reading from voltage.
  58:main.c        ****  * @detaild Voltage in mV for proper arithmetic without truncation. */
  59:main.c        **** uint16_t adc_from_v(uint16_t v) {
 206               		.stabn	68,0,59,.LM16-.LFBB4
 207               	.LM16:
 208               	.LFBB4:
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
  60:main.c        ****     uint32_t tmp = v << 10;  /* V * 1024 */
 213               		.stabn	68,0,60,.LM17-.LFBB4
 214               	.LM17:
 215 002e 60E0      		ldi r22,0
 216 0030 70E0      		ldi r23,0
 217 0032 782F      		mov r23,r24
 218 0034 770F      		lsl r23
 219 0036 770F      		lsl r23
 220 0038 80E0      		ldi r24,0
 221 003a 90E0      		ldi r25,0
  61:main.c        ****     return ((tmp / (V_REF * 1000)) & 0xFFFF);
 222               		.stabn	68,0,61,.LM18-.LFBB4
 223               	.LM18:
 224 003c E091 0000 		lds r30,V_REF
 225 0040 48EE      		ldi r20,lo8(-24)
 226 0042 53E0      		ldi r21,lo8(3)
 227 0044 E49F      		mul r30,r20
 228 0046 9001      		movw r18,r0
 229 0048 E59F      		mul r30,r21
 230 004a 300D      		add r19,r0
 231 004c 1124      		clr __zero_reg__
 232 004e 4427      		clr r20
 233 0050 37FD      		sbrc r19,7
 234 0052 4095      		com r20
 235 0054 542F      		mov r21,r20
 236 0056 0E94 0000 		call __udivmodsi4
  62:main.c        **** }
 237               		.stabn	68,0,62,.LM19-.LFBB4
 238               	.LM19:
 239 005a C901      		movw r24,r18
 240 005c 0895      		ret
 241               		.size	adc_from_v, .-adc_from_v
 242               	.Lscope4:
 243               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 244               		.stabd	78,0,0
 245               		.stabs	"v_from_adc:F(5,4)",36,0,66,v_from_adc
 246               		.stabs	"adc:P(5,4)",64,0,66,24
 247               	.global	v_from_adc
 248               		.type	v_from_adc, @function
 249               	v_from_adc:
 250               		.stabd	46,0,0
  63:main.c        **** 
  64:main.c        **** /* @brief   Voltage reading from ADC sample.
  65:main.c        ****  * @details Result in mV. */
  66:main.c        **** uint16_t v_from_adc(uint16_t adc) {
 251               		.stabn	68,0,66,.LM20-.LFBB5
 252               	.LM20:
 253               	.LFBB5:
 254               	/* prologue: function */
 255               	/* frame size = 0 */
 256               	/* stack size = 0 */
 257               	.L__stack_usage = 0
  67:main.c        ****     uint32_t tmp = adc * V_REF *1000;
 258               		.stabn	68,0,67,.LM21-.LFBB5
 259               	.LM21:
 260 005e 6091 0000 		lds r22,V_REF
 261 0062 48EE      		ldi r20,lo8(-24)
 262 0064 53E0      		ldi r21,lo8(3)
 263 0066 649F      		mul r22,r20
 264 0068 9001      		movw r18,r0
 265 006a 659F      		mul r22,r21
 266 006c 300D      		add r19,r0
 267 006e 1124      		clr __zero_reg__
 268 0070 AC01      		movw r20,r24
 269 0072 249F      		mul r18,r20
 270 0074 C001      		movw r24,r0
 271 0076 259F      		mul r18,r21
 272 0078 900D      		add r25,r0
 273 007a 349F      		mul r19,r20
 274 007c 900D      		add r25,r0
 275 007e 1124      		clr r1
 276 0080 A0E0      		ldi r26,0
 277 0082 B0E0      		ldi r27,0
  68:main.c        ****     return ((tmp >> 10) & 0xFFFF);
 278               		.stabn	68,0,68,.LM22-.LFBB5
 279               	.LM22:
 280 0084 2AE0      		ldi r18,10
 281               		1:
 282 0086 B695      		lsr r27
 283 0088 A795      		ror r26
 284 008a 9795      		ror r25
 285 008c 8795      		ror r24
 286 008e 2A95      		dec r18
 287 0090 01F4      		brne 1b
  69:main.c        **** }
 288               		.stabn	68,0,69,.LM23-.LFBB5
 289               	.LM23:
 290 0092 0895      		ret
 291               		.size	v_from_adc, .-v_from_adc
 292               	.Lscope5:
 293               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 294               		.stabd	78,0,0
 295               		.section	.text.startup,"ax",@progbits
 296               		.stabs	"main:F(0,1)",36,0,73,main
 297               	.global	main
 298               		.type	main, @function
 299               	main:
 300               		.stabd	46,0,0
  70:main.c        **** 
  71:main.c        **** 
  72:main.c        **** int
  73:main.c        **** main(void) {
 301               		.stabn	68,0,73,.LM24-.LFBB6
 302               	.LM24:
 303               	.LFBB6:
 304               	/* prologue: function */
 305               	/* frame size = 0 */
 306               	/* stack size = 0 */
 307               	.L__stack_usage = 0
  74:main.c        ****     uint16_t adc_sample;
  75:main.c        **** 
  76:main.c        ****     adc_init();
 308               		.stabn	68,0,76,.LM25-.LFBB6
 309               	.LM25:
 310 0000 0E94 0000 		call adc_init
 311               	.LBB4:
 312               	.LBB5:
  61:main.c        **** }
 313               		.stabn	68,0,61,.LM26-.LFBB6
 314               	.LM26:
 315 0004 C8EE      		ldi r28,lo8(-24)
 316 0006 D3E0      		ldi r29,lo8(3)
 317 0008 C12C      		mov r12,__zero_reg__
 318 000a 30EE      		ldi r19,lo8(-32)
 319 000c D32E      		mov r13,r19
 320 000e E12C      		mov r14,__zero_reg__
 321 0010 F12C      		mov r15,__zero_reg__
 322               	.L10:
 323               	.LBE5:
 324               	.LBE4:
  77:main.c        ****     while(1) {
  78:main.c        ****         adc_sample = adc_read(1);
 325               		.stabn	68,0,78,.LM27-.LFBB6
 326               	.LM27:
 327 0012 81E0      		ldi r24,lo8(1)
 328 0014 0E94 0000 		call adc_read
 329 0018 8C01      		movw r16,r24
 330               	.LBB7:
 331               	.LBB6:
  61:main.c        **** }
 332               		.stabn	68,0,61,.LM28-.LFBB6
 333               	.LM28:
 334 001a 8091 0000 		lds r24,V_REF
 335 001e 8C9F      		mul r24,r28
 336 0020 9001      		movw r18,r0
 337 0022 8D9F      		mul r24,r29
 338 0024 300D      		add r19,r0
 339 0026 1124      		clr __zero_reg__
 340 0028 4427      		clr r20
 341 002a 37FD      		sbrc r19,7
 342 002c 4095      		com r20
 343 002e 542F      		mov r21,r20
 344 0030 C701      		movw r24,r14
 345 0032 B601      		movw r22,r12
 346 0034 0E94 0000 		call __udivmodsi4
 347               	.LBE6:
 348               	.LBE7:
  79:main.c        ****         if (adc_sample < adc_from_v(4600)) {
 349               		.stabn	68,0,79,.LM29-.LFBB6
 350               	.LM29:
 351 0038 0217      		cp r16,r18
 352 003a 1307      		cpc r17,r19
 353 003c 00F4      		brsh .L11
  80:main.c        ****             PORTC |= (1 << PC0);       /* set HIGH */
 354               		.stabn	68,0,80,.LM30-.LFBB6
 355               	.LM30:
 356 003e A89A      		sbi 0x15,0
 357 0040 00C0      		rjmp .L10
 358               	.L11:
  81:main.c        ****         } else {
  82:main.c        ****             PORTC |= (0 << PC0);       /* set LOW */
 359               		.stabn	68,0,82,.LM31-.LFBB6
 360               	.LM31:
 361 0042 85B3      		in r24,0x15
 362 0044 85BB      		out 0x15,r24
 363 0046 00C0      		rjmp .L10
 364               		.size	main, .-main
 365               		.stabs	"adc_sample:r(5,4)",64,0,74,16
 366               		.stabn	192,0,0,.LFBB6-.LFBB6
 367               		.stabn	224,0,0,.Lscope6-.LFBB6
 368               	.Lscope6:
 369               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 370               		.stabd	78,0,0
 371               	.global	V_REF
 372               		.data
 373               		.type	V_REF, @object
 374               		.size	V_REF, 1
 375               	V_REF:
 376 0000 05        		.byte	5
 377               		.stabs	"V_REF:G(5,2)",32,0,32,0
 378               		.text
 379               		.stabs	"",100,0,0,.Letext0
 380               	.Letext0:
 381               		.ident	"GCC: (GNU) 4.8.1"
 382               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccKcLToY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccKcLToY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccKcLToY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccKcLToY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccKcLToY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccKcLToY.s:105    .text:0000000000000000 adc_init
     /tmp/ccKcLToY.s:136    .text:0000000000000010 adc_read
     /tmp/ccKcLToY.s:180    .text:0000000000000026 ports_init
     /tmp/ccKcLToY.s:204    .text:000000000000002e adc_from_v
     /tmp/ccKcLToY.s:375    .data:0000000000000000 V_REF
     /tmp/ccKcLToY.s:249    .text:000000000000005e v_from_adc
     /tmp/ccKcLToY.s:299    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__udivmodsi4
__do_copy_data
